sys-opt:
  api:
    cards:
      url: http://localhost:9000 # не используется все контролит эврика
    loans:
      url: http://localhost:8090 # не используется все контролит эврика

spring:
  application:
    name: "accounts"
  datasource:
    url: jdbc:h2:mem:testdb
    driver-class-name: org.h2.Driver
    username: sa
    password: ''
  jpa:
    hibernate:
      ddl-auto: none
    properties:
      hibernate:
        show_sql: true
        format_sql: true
  sql:
    init:
      mode: always #чтоб он сам запускал schema.sql

  config:
    import: "optional:configserver:http://localhost:8071/" #если нет доступа то мы все равно включим микросервис
  cloud:
    openfeign:
      circuitbreaker:
        enabled: true

management:
  endpoints:
    web:
      exposure:
        include: "*" #это значит чтоб все возможные энд поинты были доступны
  health:
    readinessstate:
      enabled: true
    livenessstate:
      enabled: true
  endpoint:
    shutdown:
      access: unrestricted
    health:
      probes:
        enabled: true
  info:
    env:
      enabled: true

  rabbitmq:
    host: "localhost"
    port: 5672
    username: "guest"
    password: "guest"

eureka:
  instance:
    preferIpAddress: true
  client:
    fetchRegistry: true
    registerWithEureka: true #
    serviceUrl:
      defaultZone: http://localhost:8070/eureka/

info:
  app:
    name: "accounts"
    description: "Bank Accounts Application"
    version: "1.0"

logging:
  level:
    avlyakulov:
      timur:
        accounts: DEBUG

resilience4j.circuitbreaker:
  configs:
    default: #название нашего circuit breaker котореое я указал в главном файле
      sliding-window-size: 10 #сколько нужно обработать запросов чтоб принять решение о смене состояние с close -> open
      permitted-number-of-calls-in-half-open-state: 2 #сколько запросов будет обрабатываться в half open state
      failure-rate-threshold: 50 #процент если 50% запросов падают, то мы можем пойти в открытое состояние
      wait-duration-in-open-state: 10000 #10 секунд ждет в open state чтоб потом перейти в half open state

springdoc:
  swagger-ui:
    url: /swagger.yaml